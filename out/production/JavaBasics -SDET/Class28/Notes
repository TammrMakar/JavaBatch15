Collections framework:
A collection of classes and interfaces which help us store and manage objects in the form of collections.

for  example ArrayList linkedList . these classes make it easier to manage data as they have ready -made methods.that we can just use.
Wrapper classes:
we can use primitive data types as objects with the help of wrapper classes . we cant to do it because primitive data types are not supported by the classes
in collections framework like ArrayList.
Boxing:
is the process of converting primitive data types to its corresponding wrapper type or object type or object type autoboxing.
AutoBoxing .Says just assign a wrapper type to aprimitive type variable adn the converstion will happen automatically
examples.

Integer integer=new Integer(10);  => boxing
int one=i;                        => unboxing

Autoboxing:
it says that we just have to assign a wrapper type to a primitive type of variable and conversion will happen auto

Character gf='a';     =>autoBoxing
char ch=gf;           =>auto- Unboxing

ArrayList:
ArrayList is a part of collections framework. we can store single objects inside arrayList.it works very similar
how array works but its dynamic in nature which means it can grow and shrinks its size automatically.unlike array
we ont need to provide the size upfront . we have built in methods that we can use to manipulate the objects that we store inside that arrayList.

Diamond Operator:
Diamond operators are also called angle brackets "<>".they are used to specify the name of the class who's objects we will be storing inside the classes
which belong to collections framework or any other class which uses java generics.

ArrayList VS LinkedList:
if in your code most of the time you use get method adn you don't add or remove elements from in between then you should always use ArrayList
if most of the time you add or remove elements from in between and don't use get method then you should use LinkedList.